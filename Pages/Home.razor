@page "/"
@using BlazorMovieDB.Services
@using BlazorMovieDB.Models
@inject TMDBClient TMDB
@inject NavigationManager Nav

<PageTitle>Blazor Movie: Popular Movies</PageTitle>

<div class="container-xxl py-3">
    <div>
        <h1 class="display-6">
            <span class="text-danger">
                <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-fire" viewBox="0 0 16 16">
                    <path d="M8 16c3.314 0 6-2 6-5.5 0-1.5-.5-4-2.5-6 .25 1.5-1.25 2-1.25 2C11 4 9 .5 6 0c.357 2 .5 4-2 6-1.25 1-2 2.729-2 4.5C2 14 4.686 16 8 16m0-1c-1.657 0-3-1-3-2.75 0-.75.25-2 1.25-3C6.125 10 7 10.5 7 10.5c-.375-1.25.5-3.25 2-3.5-.179 1-.25 2 1 3 .625.5 1 1.364 1 2.25C11 14 9.657 15 8 15" />
                </svg>
            </span>
            Popular Movies
        </h1>
    </div>
    <div class="d-flex flex-column flex-md-row justify-content-between my-3">


        <div class="row row-cols-2 row-cols-lg-4 row-cols-xl-5 g-3 justify-content-center justify-content-md-start">
            @if (movies is not null)
            {
                @foreach (PopularMovie movie in movies.Results)
                {
                    <div class="col">
                        <MovieCard Movie="movie" />
                    </div>
                }

            }
            else
            {
                for (int i = 0; i < 10; i++)
                {
                    <div class="col">
                        <MovieCard />
                    </div>
                }
            }
        </div>
    </div>
    @if (movies?.TotalPages > 1)
    {
        <div class="my-3">
            <Paginator CurrentPage="movies.Page"
                        TotalPages="movies.TotalPages > 500 ? 500 : movies.TotalPages"
            OnPageChange="GetPage"
            />
        </div>
    }
</div>



@code {
    private PopularMoviePagedResponse? movies;

    [SupplyParameterFromQuery]
    public int Page { get; set; } = 1;

    protected override async Task OnParametersSetAsync()
    {
        if (Page < 1) Page = 1;
        else if (Page > 500) Page = 500;

        movies = await TMDB.GetPopularMoviesAsync(Page);
    }

    private void GetPage(int pageNum)
    {
        string url = Nav.GetUriWithQueryParameter("page", pageNum);
        Nav.NavigateTo(url);
    }
}



